// Generated from DirectivesV2_.g4 by ANTLR 4.13.2
package xcom.retro.xa.antlr;
import org.antlr.v4.runtime.tree.ParseTreeListener;

/**
 * This interface defines a complete listener for a parse tree produced by
 * {@link DirectivesV2_Parser}.
 */
public interface DirectivesV2_Listener extends ParseTreeListener {
	/**
	 * Enter a parse tree produced by {@link DirectivesV2_Parser#directive}.
	 * @param ctx the parse tree
	 */
	void enterDirective(DirectivesV2_Parser.DirectiveContext ctx);
	/**
	 * Exit a parse tree produced by {@link DirectivesV2_Parser#directive}.
	 * @param ctx the parse tree
	 */
	void exitDirective(DirectivesV2_Parser.DirectiveContext ctx);
	/**
	 * Enter a parse tree produced by {@link DirectivesV2_Parser#definedDirective}.
	 * @param ctx the parse tree
	 */
	void enterDefinedDirective(DirectivesV2_Parser.DefinedDirectiveContext ctx);
	/**
	 * Exit a parse tree produced by {@link DirectivesV2_Parser#definedDirective}.
	 * @param ctx the parse tree
	 */
	void exitDefinedDirective(DirectivesV2_Parser.DefinedDirectiveContext ctx);
	/**
	 * Enter a parse tree produced by {@link DirectivesV2_Parser#macroDirective}.
	 * @param ctx the parse tree
	 */
	void enterMacroDirective(DirectivesV2_Parser.MacroDirectiveContext ctx);
	/**
	 * Exit a parse tree produced by {@link DirectivesV2_Parser#macroDirective}.
	 * @param ctx the parse tree
	 */
	void exitMacroDirective(DirectivesV2_Parser.MacroDirectiveContext ctx);
	/**
	 * Enter a parse tree produced by {@link DirectivesV2_Parser#macroInvocation}.
	 * @param ctx the parse tree
	 */
	void enterMacroInvocation(DirectivesV2_Parser.MacroInvocationContext ctx);
	/**
	 * Exit a parse tree produced by {@link DirectivesV2_Parser#macroInvocation}.
	 * @param ctx the parse tree
	 */
	void exitMacroInvocation(DirectivesV2_Parser.MacroInvocationContext ctx);
	/**
	 * Enter a parse tree produced by {@link DirectivesV2_Parser#label}.
	 * @param ctx the parse tree
	 */
	void enterLabel(DirectivesV2_Parser.LabelContext ctx);
	/**
	 * Exit a parse tree produced by {@link DirectivesV2_Parser#label}.
	 * @param ctx the parse tree
	 */
	void exitLabel(DirectivesV2_Parser.LabelContext ctx);
	/**
	 * Enter a parse tree produced by {@link DirectivesV2_Parser#symbol}.
	 * @param ctx the parse tree
	 */
	void enterSymbol(DirectivesV2_Parser.SymbolContext ctx);
	/**
	 * Exit a parse tree produced by {@link DirectivesV2_Parser#symbol}.
	 * @param ctx the parse tree
	 */
	void exitSymbol(DirectivesV2_Parser.SymbolContext ctx);
	/**
	 * Enter a parse tree produced by {@link DirectivesV2_Parser#argumentList}.
	 * @param ctx the parse tree
	 */
	void enterArgumentList(DirectivesV2_Parser.ArgumentListContext ctx);
	/**
	 * Exit a parse tree produced by {@link DirectivesV2_Parser#argumentList}.
	 * @param ctx the parse tree
	 */
	void exitArgumentList(DirectivesV2_Parser.ArgumentListContext ctx);
	/**
	 * Enter a parse tree produced by {@link DirectivesV2_Parser#argument}.
	 * @param ctx the parse tree
	 */
	void enterArgument(DirectivesV2_Parser.ArgumentContext ctx);
	/**
	 * Exit a parse tree produced by {@link DirectivesV2_Parser#argument}.
	 * @param ctx the parse tree
	 */
	void exitArgument(DirectivesV2_Parser.ArgumentContext ctx);
	/**
	 * Enter a parse tree produced by {@link DirectivesV2_Parser#parameterList}.
	 * @param ctx the parse tree
	 */
	void enterParameterList(DirectivesV2_Parser.ParameterListContext ctx);
	/**
	 * Exit a parse tree produced by {@link DirectivesV2_Parser#parameterList}.
	 * @param ctx the parse tree
	 */
	void exitParameterList(DirectivesV2_Parser.ParameterListContext ctx);
	/**
	 * Enter a parse tree produced by {@link DirectivesV2_Parser#annotatedParameter}.
	 * @param ctx the parse tree
	 */
	void enterAnnotatedParameter(DirectivesV2_Parser.AnnotatedParameterContext ctx);
	/**
	 * Exit a parse tree produced by {@link DirectivesV2_Parser#annotatedParameter}.
	 * @param ctx the parse tree
	 */
	void exitAnnotatedParameter(DirectivesV2_Parser.AnnotatedParameterContext ctx);
	/**
	 * Enter a parse tree produced by {@link DirectivesV2_Parser#parameter}.
	 * @param ctx the parse tree
	 */
	void enterParameter(DirectivesV2_Parser.ParameterContext ctx);
	/**
	 * Exit a parse tree produced by {@link DirectivesV2_Parser#parameter}.
	 * @param ctx the parse tree
	 */
	void exitParameter(DirectivesV2_Parser.ParameterContext ctx);
	/**
	 * Enter a parse tree produced by {@link DirectivesV2_Parser#paramaterDefault}.
	 * @param ctx the parse tree
	 */
	void enterParamaterDefault(DirectivesV2_Parser.ParamaterDefaultContext ctx);
	/**
	 * Exit a parse tree produced by {@link DirectivesV2_Parser#paramaterDefault}.
	 * @param ctx the parse tree
	 */
	void exitParamaterDefault(DirectivesV2_Parser.ParamaterDefaultContext ctx);
	/**
	 * Enter a parse tree produced by {@link DirectivesV2_Parser#expr}.
	 * @param ctx the parse tree
	 */
	void enterExpr(DirectivesV2_Parser.ExprContext ctx);
	/**
	 * Exit a parse tree produced by {@link DirectivesV2_Parser#expr}.
	 * @param ctx the parse tree
	 */
	void exitExpr(DirectivesV2_Parser.ExprContext ctx);
	/**
	 * Enter a parse tree produced by {@link DirectivesV2_Parser#term}.
	 * @param ctx the parse tree
	 */
	void enterTerm(DirectivesV2_Parser.TermContext ctx);
	/**
	 * Exit a parse tree produced by {@link DirectivesV2_Parser#term}.
	 * @param ctx the parse tree
	 */
	void exitTerm(DirectivesV2_Parser.TermContext ctx);
	/**
	 * Enter a parse tree produced by {@link DirectivesV2_Parser#lc}.
	 * @param ctx the parse tree
	 */
	void enterLc(DirectivesV2_Parser.LcContext ctx);
	/**
	 * Exit a parse tree produced by {@link DirectivesV2_Parser#lc}.
	 * @param ctx the parse tree
	 */
	void exitLc(DirectivesV2_Parser.LcContext ctx);
	/**
	 * Enter a parse tree produced by {@link DirectivesV2_Parser#binary}.
	 * @param ctx the parse tree
	 */
	void enterBinary(DirectivesV2_Parser.BinaryContext ctx);
	/**
	 * Exit a parse tree produced by {@link DirectivesV2_Parser#binary}.
	 * @param ctx the parse tree
	 */
	void exitBinary(DirectivesV2_Parser.BinaryContext ctx);
	/**
	 * Enter a parse tree produced by {@link DirectivesV2_Parser#comparison}.
	 * @param ctx the parse tree
	 */
	void enterComparison(DirectivesV2_Parser.ComparisonContext ctx);
	/**
	 * Exit a parse tree produced by {@link DirectivesV2_Parser#comparison}.
	 * @param ctx the parse tree
	 */
	void exitComparison(DirectivesV2_Parser.ComparisonContext ctx);
	/**
	 * Enter a parse tree produced by {@link DirectivesV2_Parser#unary}.
	 * @param ctx the parse tree
	 */
	void enterUnary(DirectivesV2_Parser.UnaryContext ctx);
	/**
	 * Exit a parse tree produced by {@link DirectivesV2_Parser#unary}.
	 * @param ctx the parse tree
	 */
	void exitUnary(DirectivesV2_Parser.UnaryContext ctx);
	/**
	 * Enter a parse tree produced by {@link DirectivesV2_Parser#integerAdd}.
	 * @param ctx the parse tree
	 */
	void enterIntegerAdd(DirectivesV2_Parser.IntegerAddContext ctx);
	/**
	 * Exit a parse tree produced by {@link DirectivesV2_Parser#integerAdd}.
	 * @param ctx the parse tree
	 */
	void exitIntegerAdd(DirectivesV2_Parser.IntegerAddContext ctx);
	/**
	 * Enter a parse tree produced by {@link DirectivesV2_Parser#integerSubtract}.
	 * @param ctx the parse tree
	 */
	void enterIntegerSubtract(DirectivesV2_Parser.IntegerSubtractContext ctx);
	/**
	 * Exit a parse tree produced by {@link DirectivesV2_Parser#integerSubtract}.
	 * @param ctx the parse tree
	 */
	void exitIntegerSubtract(DirectivesV2_Parser.IntegerSubtractContext ctx);
	/**
	 * Enter a parse tree produced by {@link DirectivesV2_Parser#integerMultiply}.
	 * @param ctx the parse tree
	 */
	void enterIntegerMultiply(DirectivesV2_Parser.IntegerMultiplyContext ctx);
	/**
	 * Exit a parse tree produced by {@link DirectivesV2_Parser#integerMultiply}.
	 * @param ctx the parse tree
	 */
	void exitIntegerMultiply(DirectivesV2_Parser.IntegerMultiplyContext ctx);
	/**
	 * Enter a parse tree produced by {@link DirectivesV2_Parser#integerDivide}.
	 * @param ctx the parse tree
	 */
	void enterIntegerDivide(DirectivesV2_Parser.IntegerDivideContext ctx);
	/**
	 * Exit a parse tree produced by {@link DirectivesV2_Parser#integerDivide}.
	 * @param ctx the parse tree
	 */
	void exitIntegerDivide(DirectivesV2_Parser.IntegerDivideContext ctx);
	/**
	 * Enter a parse tree produced by {@link DirectivesV2_Parser#bitwiseShiftLeft}.
	 * @param ctx the parse tree
	 */
	void enterBitwiseShiftLeft(DirectivesV2_Parser.BitwiseShiftLeftContext ctx);
	/**
	 * Exit a parse tree produced by {@link DirectivesV2_Parser#bitwiseShiftLeft}.
	 * @param ctx the parse tree
	 */
	void exitBitwiseShiftLeft(DirectivesV2_Parser.BitwiseShiftLeftContext ctx);
	/**
	 * Enter a parse tree produced by {@link DirectivesV2_Parser#bitwiseShiftRight}.
	 * @param ctx the parse tree
	 */
	void enterBitwiseShiftRight(DirectivesV2_Parser.BitwiseShiftRightContext ctx);
	/**
	 * Exit a parse tree produced by {@link DirectivesV2_Parser#bitwiseShiftRight}.
	 * @param ctx the parse tree
	 */
	void exitBitwiseShiftRight(DirectivesV2_Parser.BitwiseShiftRightContext ctx);
	/**
	 * Enter a parse tree produced by {@link DirectivesV2_Parser#bitwiseAnd}.
	 * @param ctx the parse tree
	 */
	void enterBitwiseAnd(DirectivesV2_Parser.BitwiseAndContext ctx);
	/**
	 * Exit a parse tree produced by {@link DirectivesV2_Parser#bitwiseAnd}.
	 * @param ctx the parse tree
	 */
	void exitBitwiseAnd(DirectivesV2_Parser.BitwiseAndContext ctx);
	/**
	 * Enter a parse tree produced by {@link DirectivesV2_Parser#bitwiseOr}.
	 * @param ctx the parse tree
	 */
	void enterBitwiseOr(DirectivesV2_Parser.BitwiseOrContext ctx);
	/**
	 * Exit a parse tree produced by {@link DirectivesV2_Parser#bitwiseOr}.
	 * @param ctx the parse tree
	 */
	void exitBitwiseOr(DirectivesV2_Parser.BitwiseOrContext ctx);
	/**
	 * Enter a parse tree produced by {@link DirectivesV2_Parser#logicalAnd}.
	 * @param ctx the parse tree
	 */
	void enterLogicalAnd(DirectivesV2_Parser.LogicalAndContext ctx);
	/**
	 * Exit a parse tree produced by {@link DirectivesV2_Parser#logicalAnd}.
	 * @param ctx the parse tree
	 */
	void exitLogicalAnd(DirectivesV2_Parser.LogicalAndContext ctx);
	/**
	 * Enter a parse tree produced by {@link DirectivesV2_Parser#logicalOr}.
	 * @param ctx the parse tree
	 */
	void enterLogicalOr(DirectivesV2_Parser.LogicalOrContext ctx);
	/**
	 * Exit a parse tree produced by {@link DirectivesV2_Parser#logicalOr}.
	 * @param ctx the parse tree
	 */
	void exitLogicalOr(DirectivesV2_Parser.LogicalOrContext ctx);
	/**
	 * Enter a parse tree produced by {@link DirectivesV2_Parser#equal}.
	 * @param ctx the parse tree
	 */
	void enterEqual(DirectivesV2_Parser.EqualContext ctx);
	/**
	 * Exit a parse tree produced by {@link DirectivesV2_Parser#equal}.
	 * @param ctx the parse tree
	 */
	void exitEqual(DirectivesV2_Parser.EqualContext ctx);
	/**
	 * Enter a parse tree produced by {@link DirectivesV2_Parser#notEqual}.
	 * @param ctx the parse tree
	 */
	void enterNotEqual(DirectivesV2_Parser.NotEqualContext ctx);
	/**
	 * Exit a parse tree produced by {@link DirectivesV2_Parser#notEqual}.
	 * @param ctx the parse tree
	 */
	void exitNotEqual(DirectivesV2_Parser.NotEqualContext ctx);
	/**
	 * Enter a parse tree produced by {@link DirectivesV2_Parser#lessThan}.
	 * @param ctx the parse tree
	 */
	void enterLessThan(DirectivesV2_Parser.LessThanContext ctx);
	/**
	 * Exit a parse tree produced by {@link DirectivesV2_Parser#lessThan}.
	 * @param ctx the parse tree
	 */
	void exitLessThan(DirectivesV2_Parser.LessThanContext ctx);
	/**
	 * Enter a parse tree produced by {@link DirectivesV2_Parser#greaterThan}.
	 * @param ctx the parse tree
	 */
	void enterGreaterThan(DirectivesV2_Parser.GreaterThanContext ctx);
	/**
	 * Exit a parse tree produced by {@link DirectivesV2_Parser#greaterThan}.
	 * @param ctx the parse tree
	 */
	void exitGreaterThan(DirectivesV2_Parser.GreaterThanContext ctx);
	/**
	 * Enter a parse tree produced by {@link DirectivesV2_Parser#plus}.
	 * @param ctx the parse tree
	 */
	void enterPlus(DirectivesV2_Parser.PlusContext ctx);
	/**
	 * Exit a parse tree produced by {@link DirectivesV2_Parser#plus}.
	 * @param ctx the parse tree
	 */
	void exitPlus(DirectivesV2_Parser.PlusContext ctx);
	/**
	 * Enter a parse tree produced by {@link DirectivesV2_Parser#minus}.
	 * @param ctx the parse tree
	 */
	void enterMinus(DirectivesV2_Parser.MinusContext ctx);
	/**
	 * Exit a parse tree produced by {@link DirectivesV2_Parser#minus}.
	 * @param ctx the parse tree
	 */
	void exitMinus(DirectivesV2_Parser.MinusContext ctx);
	/**
	 * Enter a parse tree produced by {@link DirectivesV2_Parser#highByte}.
	 * @param ctx the parse tree
	 */
	void enterHighByte(DirectivesV2_Parser.HighByteContext ctx);
	/**
	 * Exit a parse tree produced by {@link DirectivesV2_Parser#highByte}.
	 * @param ctx the parse tree
	 */
	void exitHighByte(DirectivesV2_Parser.HighByteContext ctx);
	/**
	 * Enter a parse tree produced by {@link DirectivesV2_Parser#lowByte}.
	 * @param ctx the parse tree
	 */
	void enterLowByte(DirectivesV2_Parser.LowByteContext ctx);
	/**
	 * Exit a parse tree produced by {@link DirectivesV2_Parser#lowByte}.
	 * @param ctx the parse tree
	 */
	void exitLowByte(DirectivesV2_Parser.LowByteContext ctx);
	/**
	 * Enter a parse tree produced by {@link DirectivesV2_Parser#logicalNot}.
	 * @param ctx the parse tree
	 */
	void enterLogicalNot(DirectivesV2_Parser.LogicalNotContext ctx);
	/**
	 * Exit a parse tree produced by {@link DirectivesV2_Parser#logicalNot}.
	 * @param ctx the parse tree
	 */
	void exitLogicalNot(DirectivesV2_Parser.LogicalNotContext ctx);
	/**
	 * Enter a parse tree produced by {@link DirectivesV2_Parser#literal}.
	 * @param ctx the parse tree
	 */
	void enterLiteral(DirectivesV2_Parser.LiteralContext ctx);
	/**
	 * Exit a parse tree produced by {@link DirectivesV2_Parser#literal}.
	 * @param ctx the parse tree
	 */
	void exitLiteral(DirectivesV2_Parser.LiteralContext ctx);
	/**
	 * Enter a parse tree produced by {@link DirectivesV2_Parser#numericLiteral}.
	 * @param ctx the parse tree
	 */
	void enterNumericLiteral(DirectivesV2_Parser.NumericLiteralContext ctx);
	/**
	 * Exit a parse tree produced by {@link DirectivesV2_Parser#numericLiteral}.
	 * @param ctx the parse tree
	 */
	void exitNumericLiteral(DirectivesV2_Parser.NumericLiteralContext ctx);
	/**
	 * Enter a parse tree produced by {@link DirectivesV2_Parser#alphanumericLiteral}.
	 * @param ctx the parse tree
	 */
	void enterAlphanumericLiteral(DirectivesV2_Parser.AlphanumericLiteralContext ctx);
	/**
	 * Exit a parse tree produced by {@link DirectivesV2_Parser#alphanumericLiteral}.
	 * @param ctx the parse tree
	 */
	void exitAlphanumericLiteral(DirectivesV2_Parser.AlphanumericLiteralContext ctx);
	/**
	 * Enter a parse tree produced by {@link DirectivesV2_Parser#binaryLiteral}.
	 * @param ctx the parse tree
	 */
	void enterBinaryLiteral(DirectivesV2_Parser.BinaryLiteralContext ctx);
	/**
	 * Exit a parse tree produced by {@link DirectivesV2_Parser#binaryLiteral}.
	 * @param ctx the parse tree
	 */
	void exitBinaryLiteral(DirectivesV2_Parser.BinaryLiteralContext ctx);
	/**
	 * Enter a parse tree produced by {@link DirectivesV2_Parser#octalLiteral}.
	 * @param ctx the parse tree
	 */
	void enterOctalLiteral(DirectivesV2_Parser.OctalLiteralContext ctx);
	/**
	 * Exit a parse tree produced by {@link DirectivesV2_Parser#octalLiteral}.
	 * @param ctx the parse tree
	 */
	void exitOctalLiteral(DirectivesV2_Parser.OctalLiteralContext ctx);
	/**
	 * Enter a parse tree produced by {@link DirectivesV2_Parser#decimalLiteral}.
	 * @param ctx the parse tree
	 */
	void enterDecimalLiteral(DirectivesV2_Parser.DecimalLiteralContext ctx);
	/**
	 * Exit a parse tree produced by {@link DirectivesV2_Parser#decimalLiteral}.
	 * @param ctx the parse tree
	 */
	void exitDecimalLiteral(DirectivesV2_Parser.DecimalLiteralContext ctx);
	/**
	 * Enter a parse tree produced by {@link DirectivesV2_Parser#hexLiteral}.
	 * @param ctx the parse tree
	 */
	void enterHexLiteral(DirectivesV2_Parser.HexLiteralContext ctx);
	/**
	 * Exit a parse tree produced by {@link DirectivesV2_Parser#hexLiteral}.
	 * @param ctx the parse tree
	 */
	void exitHexLiteral(DirectivesV2_Parser.HexLiteralContext ctx);
	/**
	 * Enter a parse tree produced by {@link DirectivesV2_Parser#characterLiteral}.
	 * @param ctx the parse tree
	 */
	void enterCharacterLiteral(DirectivesV2_Parser.CharacterLiteralContext ctx);
	/**
	 * Exit a parse tree produced by {@link DirectivesV2_Parser#characterLiteral}.
	 * @param ctx the parse tree
	 */
	void exitCharacterLiteral(DirectivesV2_Parser.CharacterLiteralContext ctx);
	/**
	 * Enter a parse tree produced by {@link DirectivesV2_Parser#stringLiteral}.
	 * @param ctx the parse tree
	 */
	void enterStringLiteral(DirectivesV2_Parser.StringLiteralContext ctx);
	/**
	 * Exit a parse tree produced by {@link DirectivesV2_Parser#stringLiteral}.
	 * @param ctx the parse tree
	 */
	void exitStringLiteral(DirectivesV2_Parser.StringLiteralContext ctx);
	/**
	 * Enter a parse tree produced by {@link DirectivesV2_Parser#identifier}.
	 * @param ctx the parse tree
	 */
	void enterIdentifier(DirectivesV2_Parser.IdentifierContext ctx);
	/**
	 * Exit a parse tree produced by {@link DirectivesV2_Parser#identifier}.
	 * @param ctx the parse tree
	 */
	void exitIdentifier(DirectivesV2_Parser.IdentifierContext ctx);
}