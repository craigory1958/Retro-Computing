

package xcom.retro.xa.expressions.value ;


import java.util.Map ;

import com.google.common.primitives.Bytes ;

import xcom.retro.xa.Symbol ;
import xcom.retro.xa.expressions._ExprNode ;


public abstract class _ValueNode<T> extends _ExprNode {

	//@formatter:off

	byte[] bytes ;
	public byte[] bytes() { return bytes ; }

	T value ;
	public abstract T value();

	//@formatter:on


	public _ValueNode(final byte[] value) {
		this.bytes = value.clone() ;
	}

	public _ValueNode(byte value) {
		byte[] b = { value } ;
		this.bytes = b ;
	}


//	public int getValueAsInteger() {
//		return ExpressionUtils.asInteger(value) ;
//	}
//
//
//	public String getValueAsString() {
//		return ExpressionUtils.asString(value) ;
//	}


	@Override
	public _ValueNode<T> eval(final Map<String, Symbol> symbols) {
		return this ;
	}


	@Override
	public String toString() {
		return Bytes.asList(bytes).toString() ;
	}
}
